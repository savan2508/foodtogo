/**
 * @module space
 * @description A utility module for creating space around React Native components using styled-components.
 * @exports Spacer
 * // Example usage of Spacer component
 * <Spacer position="top" size="medium">
 *   <Text>This is a text component with space at the top.</Text>
 * </Spacer>
 */

import { styled } from "styled-components/native";
import { useTheme } from "styled-components";

/**
 * @constant {Object} sizesVariant - Mapping of size variants to their numerical values.
 */
const sizesVariant = {
  small: 1,
  medium: 2,
  large: 3,
};

/**
 * @constant {Object} positionVariant - Mapping of position variants to their corresponding margin properties.
 */
const positionVariant = {
  top: "marginTop",
  left: "marginLeft",
  right: "marginRight",
  bottom: "marginBottom",
};

/**
 * @function
 * @description Get the style variant based on position, size, and theme.
 * @param {string} position - The position where space is applied (top, left, right, bottom).
 * @param {string} size - The size of the space (small, medium, large).
 * @param {Object} theme - The theme object from styled-components.
 * @returns {string} - The style variant for the given position, size, and theme.
 */
const getVariant = (position, size, theme) => {
  const sizeValue = sizesVariant[size];
  const property = positionVariant[position];
  const value = theme.space[sizeValue];
  return `${property}: ${value}`;
};

/**
 * @component
 * @description A styled View component for creating space around child components.
 * @property {string} variant - The style variant generated by the getVariant function.
 */
const SpaceView = styled.View`
  ${({ variant }) => variant}
`;

/**
 * @component
 * @description A spacer component that adds space around child components.
 * @property {string} position - The position where space is applied (top, left, right, bottom).
 * @property {string} size - The size of the space (small, medium, large).
 * @property {React} children - The child components to which space is applied.
 * @example
 * // Example usage of Spacer component
 * <Spacer position="top" size="medium">
 *   <Text>This is a text component with space at the top.</Text>
 * </Spacer>
 */
export const Spacer = ({ position, size, children }) => {
  const theme = useTheme();
  const variable = getVariant(position, size, theme);
  return <SpaceView variant={variable}>{children}</SpaceView>;
};

/**
 * @defaultprops
 * @property {string} position - The default position for the Spacer component (top).
 * @property {string} size - The default size for the Spacer component (small).
 */
Spacer.defaultProps = {
  position: "top",
  size: "small",
};
